# Generated by Django 5.2.3 on 2025-06-23 06:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fullname', models.CharField(blank=True, max_length=100)),
                ('gender', models.CharField(blank=True, max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('total_khatmas_completed', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Khatma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('khatma_type', models.CharField(choices=[('private', 'خاتمة خاصة'), ('group', 'خاتمة جماعية')], default='private', max_length=10)),
                ('status', models.CharField(choices=[('active', 'نشطة'), ('completed', 'مكتملة'), ('paused', 'متوقفة')], default='active', max_length=10)),
                ('target_days', models.IntegerField(help_text='Target days to complete', validators=[django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_khatmas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KhatmaParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('chapter_assigned', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('khatma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.khatma')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='khatma',
            name='participants',
            field=models.ManyToManyField(related_name='joined_khatmas', through='api.KhatmaParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('khatma_invitation', 'Khatma Invitation'), ('khatma_completed', 'Khatma Completed'), ('daily_reminder', 'Daily Reminder'), ('achievement_earned', 'Achievement Earned'), ('chapter_assigned', 'Chapter Assigned'), ('chapter_completed', 'Chapter Completed')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_khatma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.khatma')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReadingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_assigned', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('is_completed', models.BooleanField(default=True)),
                ('reading_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('khatma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_sessions', to='api.khatma')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-reading_date'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('first_khatma', 'First Khatma'), ('streak_7', '7 Day Streak'), ('streak_30', '30 Day Streak'), ('fast_reader', 'Fast Reader'), ('consistent_reader', 'Consistent Reader'), ('chapter_master', 'Chapter Master'), ('group_leader', 'Group Leader')], max_length=20)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
                ('khatma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.khatma')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'achievement_type'), name='unique_user_achievement')],
            },
        ),
        migrations.AddConstraint(
            model_name='khatmaparticipant',
            constraint=models.UniqueConstraint(fields=('user', 'khatma'), name='unique_user_khatma'),
        ),
        migrations.AddConstraint(
            model_name='khatmaparticipant',
            constraint=models.UniqueConstraint(fields=('khatma', 'chapter_assigned'), name='unique_chapter_assignment'),
        ),
        migrations.AddConstraint(
            model_name='readingsession',
            constraint=models.UniqueConstraint(condition=models.Q(('is_completed', True)), fields=('khatma', 'user', 'chapter_assigned'), name='unique_completed_chapter_per_user'),
        ),
    ]
